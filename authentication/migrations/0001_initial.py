# Generated by Django 4.2.7 on 2025-09-27 06:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        blank=True,
                        help_text="Código de empleado único",
                        max_length=20,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Número de teléfono del usuario",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número de teléfono debe tener entre 9 y 15 dígitos.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el usuario está activo en el sistema",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha de creación del usuario"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha de última actualización del usuario",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "ordering": ["username"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha de creación del registro"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha de última actualización del registro",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Polinizador", "Polinizador"),
                            ("Germinador", "Germinador"),
                            ("Secretaria", "Secretaria"),
                            ("Administrador", "Administrador"),
                        ],
                        help_text="Nombre del rol en el sistema",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Descripción detallada del rol y sus responsabilidades",
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=dict,
                        help_text="Permisos específicos del rol en formato JSON",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el rol está activo en el sistema",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rol",
                "verbose_name_plural": "Roles",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha de creación del registro"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha de última actualización del registro",
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Departamento o área de trabajo",
                        max_length=100,
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        help_text="Cargo o posición en la organización",
                        max_length=100,
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="Biografía o descripción del usuario"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Imagen de perfil del usuario",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, help_text="Fecha de nacimiento", null=True
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, help_text="Dirección del usuario"),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        blank=True,
                        help_text="Nombre del contacto de emergencia",
                        max_length=100,
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        blank=True,
                        help_text="Teléfono del contacto de emergencia",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número de teléfono debe tener entre 9 y 15 dígitos.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "preferences",
                    models.JSONField(
                        default=dict,
                        help_text="Preferencias del usuario en formato JSON",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="Usuario asociado al perfil",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de Usuario",
                "verbose_name_plural": "Perfiles de Usuario",
            },
        ),
        migrations.AddField(
            model_name="customuser",
            name="role",
            field=models.ForeignKey(
                blank=True,
                help_text="Rol asignado al usuario",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="users",
                to="authentication.role",
            ),
        ),
        migrations.AddField(
            model_name="customuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
